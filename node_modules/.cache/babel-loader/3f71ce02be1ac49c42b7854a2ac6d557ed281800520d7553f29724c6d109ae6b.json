{"ast":null,"code":"var _jsxFileName = \"/Users/rodrigoyaelmoralesvazquez/Desktop/EBAC/React/song-library/src/views/Home.js\",\n  _s = $RefreshSig$();\n// src/views/Home.js\nimport React, { useEffect, useState } from 'react';\nimport Song from '../components/Song';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    // Aquí simularíamos una \"carga\" de canciones (puedes obtenerlas desde una API en un caso real)\n    const songList = [{\n      title: 'Song 1',\n      artist: 'Artist 1',\n      duration: 3.5\n    }, {\n      title: 'Song 2',\n      artist: 'Artist 2',\n      duration: 4.2\n    }, {\n      title: 'Song 3',\n      artist: 'Artist 3',\n      duration: 2.8\n    }];\n    setSongs(songList);\n    console.log('La app se ha cargado correctamente');\n  }, []); // El array vacío asegura que se ejecute solo una vez, como componentDidMount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(Song, {\n      title: song.title,\n      artist: song.artist,\n      duration: song.duration\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"VOyZriN/Fhf+BilZMpMEIr3tV0w=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Song","jsxDEV","_jsxDEV","Home","_s","songs","setSongs","songList","title","artist","duration","console","log","className","children","map","song","index","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rodrigoyaelmoralesvazquez/Desktop/EBAC/React/song-library/src/views/Home.js"],"sourcesContent":["// src/views/Home.js\nimport React, { useEffect, useState } from 'react';\nimport Song from '../components/Song';\n\nconst Home = () => {\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    // Aquí simularíamos una \"carga\" de canciones (puedes obtenerlas desde una API en un caso real)\n    const songList = [\n      { title: 'Song 1', artist: 'Artist 1', duration: 3.5 },\n      { title: 'Song 2', artist: 'Artist 2', duration: 4.2 },\n      { title: 'Song 3', artist: 'Artist 3', duration: 2.8 },\n    ];\n\n    setSongs(songList);\n    console.log('La app se ha cargado correctamente');\n  }, []); // El array vacío asegura que se ejecute solo una vez, como componentDidMount\n\n  return (\n    <div className=\"home\">\n      {songs.map((song, index) => (\n        <Song\n          key={index}\n          title={song.title}\n          artist={song.artist}\n          duration={song.duration}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Home;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,QAAQ,GAAG,CACf;MAAEC,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAI,CAAC,EACtD;MAAEF,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAI,CAAC,EACtD;MAAEF,KAAK,EAAE,QAAQ;MAAEC,MAAM,EAAE,UAAU;MAAEC,QAAQ,EAAE;IAAI,CAAC,CACvD;IAEDJ,QAAQ,CAACC,QAAQ,CAAC;IAClBI,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EACnD,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEV,OAAA;IAAKW,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBT,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBf,OAAA,CAACF,IAAI;MAEHQ,KAAK,EAAEQ,IAAI,CAACR,KAAM;MAClBC,MAAM,EAAEO,IAAI,CAACP,MAAO;MACpBC,QAAQ,EAAEM,IAAI,CAACN;IAAS,GAHnBO,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CA3BID,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}